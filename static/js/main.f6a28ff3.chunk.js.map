{"version":3,"sources":["Componets/ExerciseData/ExerciseData.js","Componets/ExerciseTemplate/Template.jsx","Componets/Navigation/SectionDescription.jsx","Componets/Navigation/ExerciseSection.js","Componets/Navigation/AboutSection.js","App.js","reportWebVitals.js","index.js"],"names":["Data","id","sortKey","problemDescription","mathProblem","answer","Template","keyName","useState","typedAnswer","setTypedAnswer","map","induvidual","console","log","className","Provider","Node","inline","formula","type","onChange","e","target","value","autoComplete","onClick","node","document","getElementById","textContent","style","color","disabled","backgroundColor","onCheck","SectionDescription","difficulty","toLowerCase","Exercises","to","path","Easy","Medium","Hard","delay","About","App","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f6a28ff3.chunk.js","sourcesContent":["//Here is the data that cotains description, math problem, and answer\n\nconst Data = [\n    {id:1, sortKey:\"easy\", problemDescription:\"Find for X\"   ,mathProblem:\"7x - 6 = 22\", answer:4},\n    {id:2, sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"5 + 2x = 15\", answer:5},\n    {id:3, sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"4x + 3 = 11\", answer:2},\n    {id:4,  sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"-5x + 20 = 25\", answer:-1},\n    {id:5,  sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"12x + 0 = 144\", answer:12},\n    {id:6,  sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"-10x - 19 = 19 - 8x \", answer:-19},\n\n\n    {id:11, sortKey:\"medium\",problemDescription:\"Evaluate, when X = 10\" ,mathProblem:\" 30 - |-x + 6|\", answer:26},\n    {id:22,  sortKey:\"medium\",problemDescription:\"Evaluate when X = 2 and Y = -2\" ,mathProblem:\"2xy^3 + x - 2y\", answer:1},\n    {id:33,  sortKey:\"medium\",problemDescription:\"How many solutions does the equation 2x2 + 3x = 8 have?\" ,mathProblem:\"\", answer:2},\n    {id:44,  sortKey:\"medium\",problemDescription:\"Evaluate\" ,mathProblem:\"11+\\\\sqrt{-4 + 6ร4รท3}\", answer:13},\n    {id:55,  sortKey:\"medium\",problemDescription:\"Solve the equation\" ,mathProblem:\"-0.25 x + 1.3 = -0.55 x - 0.2\", answer:-5},\n    {id:66,  sortKey:\"medium\",problemDescription:\"What is the slope of a line perpendicular to the line x = -3?\" ,mathProblem:\"\", answer:0},\n\n\n    {id:21, sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"2+2^2\", answer:1},\n    {id:22,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"2+2^2\", answer:1},\n    {id:23,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"2+2^2\", answer:1},\n    {id:24,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"2+2^2\", answer:1},\n    {id:25,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"2+2^2\", answer:1},\n    {id:26,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"2+2^2\", answer:1}\n]\n\n//Exporting the data\nexport default Data","import { useState } from \"react\";\nimport Data from \"../ExerciseData/ExerciseData.js\";\n// import EquationEditor from \"equation-editor-react\";\n// import MathJax from \"mathjax3-react\";\nimport MathJax from 'react-mathjax';\n\n\n//template of the item with exercise data like for desription, problem, input and button\n\nfunction Template({keyName}){\n\n    //sets answer that was typed(for now only with numbers)\n    const [typedAnswer, setTypedAnswer] = useState()\n\n\n    return(<section>{\n//maps throgh data from ExerciseData.js\n\n      Data.map((induvidual)=>{\n        const {problemDescription, mathProblem, answer, sortKey, id} = induvidual\n        //consoles the mathProblem and answer to console to now the true answer(for testing only!)\n        \n        console.log(`${mathProblem} Answer:${answer}`);\n        \n\n        \n//targets value of the induvidual item\n        if(sortKey === keyName){\n\n          const onChanges = (e) =>{\n            setTypedAnswer(e.target.value)\n          }\n//sets changes if the answer is right or not. This function disables inputfield and colors the button green \n//if the answer is right or makes button red if it is wrong\n          const onCheck = (id) =>{\n            console.log(\"Checked\")\n            console.log();\n//changes the text content and color of <h1>(line 50) if the answer was right or wrong\n             if(typedAnswer == answer){\n              let node = document.getElementById(`${id}verificationMessage`)\n              node.textContent = \"Good job!\"\n              node.style.color = \"limegreen\"\n//disables input field and button if the answer was right\n              document.getElementById(`${id}input`).disabled = true\n              document.getElementById(`${id}button`).disabled = true\n              document.getElementById(`${id}button`).style.backgroundColor = \"#cccccc\"\n              setTypedAnswer(0)\n            }else{\n//changes text content and color  of <h1>(line 50) to red if the answer was wrong\n              let node = document.getElementById(`${id}verificationMessage`)\n              node.textContent = \"Incorrect, try again!\"\n              node.style.color = \"crimson\"\n            }\n          }\n      //the temple ot self  \n      //so here if can see, I made uniqe ids for each element in \"item\" slot depending by id of the \"item\" \n      //so each element can have independed but same checking procedure \n\n          return (\n           <div id={id} key={id} className=\"item\">\n\n             <div id={`${id}Title`} className=\"title\">\n              <h1>{problemDescription}</h1>\n              <h2 id={`${id}verificationMessage`}></h2>\n             </div>\n                <div className=\"itemContent\">\n                    <div className=\"mathProblemDesc\">\n                      <MathJax.Provider>\n                        <MathJax.Node inline formula={mathProblem}/>\n                      </MathJax.Provider>\n                    </div>\n                    <div>\n                      <input id={`${id}input`} type=\"text\" onChange={onChanges} autoComplete=\"off\"/>\n                      <button id={`${id}button`} onClick={()=>{onCheck(id)}}>Submit</button>\n                    </div>\n\n                </div>\n                \n           </div>\n          )\n        }\n    })\n}\n</section>)\n}\n\nexport default Template\n\n","//This is template for description of current choosed section\n\nfunction SectionDescription({difficulty}){\n    return(<article>\n        <h1>{`${difficulty}`}</h1>\n        <p>{`This is ${difficulty.toLowerCase()} level section`}</p>\n        <p className=\"opac\">{\"In console you can find right answers(for testing only)\"}</p>\n    </article>)\n}\n\nexport default SectionDescription;","import  Template  from \"../ExerciseTemplate/Template.jsx\";\nimport '../../css/App.css';\nimport  SectionDescription  from \"./SectionDescription\";\n//imported a fade-in components from packege.json\nimport FadeIn from 'react-fade-in';\n//imported react router from packege.json\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nfunction Exercises() {\n    return(\n        <Router>\n        <section className=\"difficultyRouter\">\n          <nav className=\"difficultySection\">\n            <ul>\n              <li>\n                <Link className=\"Link linkHover\" to=\"/exercises/easy\">Easy</Link>\n              </li>\n              <li>\n                <Link className=\"Link linkHover\" to=\"/exercises/normal\">Medium</Link>\n              </li>\n              <li>\n                <Link className=\"Link linkHover\" to=\"/exercises/hard\">Hard</Link>\n              </li>\n            </ul>\n          </nav>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/exercises/easy\">\n              <Easy/>\n            </Route>\n            <Route path=\"/exercises/normal\">\n              <Medium/>\n            </Route>\n            <Route path=\"/exercises/hard\">\n              <Hard/>\n            </Route>\n          </Switch>\n        </section>\n      </Router>\n    );\n\n    function Easy() {\n      return(\n          <FadeIn delay={200}>\n            <SectionDescription difficulty=\"Easy\" />\n            <Template keyName=\"easy\"/>\n          </FadeIn>\n      )\n    }\n    function Medium() {\n      return(\n          <FadeIn delay={200}>\n            <SectionDescription difficulty=\"Medium\" />\n            <Template keyName=\"medium\"/>\n          </FadeIn>\n      )\n    }\n    function Hard() {\n      return(\n          <FadeIn delay={200}>\n            <SectionDescription difficulty=\"Hard\" />\n            <Template keyName=\"hard\"/>\n          </FadeIn>\n      )\n    }\n}\n\nexport default Exercises","import '../../css/About.css';\n\nfunction About() {\n    return (\n      <section className=\"abouttitlesect\">\n        <div>\n          <h1>About</h1>\n          <p>Math-Test-Exersices is non commersial platform for solving easy/medium/hard algebraic problems</p>\n          <p>For now, this website does not contain hard stuctured exersises, and will be added later.</p>\n          <h1>How to fill answers:</h1>\n          <p>1. Answers should not contain spaces (write correctly: -2).</p>\n          <p>2. Ordinary fractions - through a slash (correct to write: 4/3);</p>\n          <p>3. Decimal fractions - through a dot without spaces (write correctly: 4.7)</p>\n        </div>\n      </section>\n    )\n  }\n\nexport default About","import Exercises from \"./Componets/Navigation/ExerciseSection.js\";\nimport About from \"./Componets/Navigation/AboutSection.js\";\n//imported icons from packege.json\nimport { FaPenAlt } from 'react-icons/fa';\n//imported a fade-in components from packege.json\nimport FadeIn from 'react-fade-in';\nimport './css/App.css';\nimport React from \"react\";\n//imported react router from packege.json\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <section className=\"router\">\n        <nav className=\"navSection\">\n\n          <ul>\n            <li><FaPenAlt size={40} className=\"logoIcon\"/></li>\n            <li>\n              <Link className=\"Link\" to=\"/\">Exercises</Link>\n            </li>\n\n            <li>\n              <Link className=\"Link\" to=\"/about\">About</Link>\n            </li>\n          </ul>\n\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/about\">\n            <FadeIn>\n            <About />\n            </FadeIn>\n\n          </Route>\n          <Route path=\"/\">\n            <Exercises />\n          </Route>\n        </Switch>\n      </section>\n    </Router>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}