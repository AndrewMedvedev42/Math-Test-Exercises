{"version":3,"sources":["Componets/ExerciseData/ExerciseData.js","Componets/ExerciseTemplate/Easy.jsx","Componets/Navigation/ExerciseSection.js","Componets/Navigation/AboutSection.js","App.js","reportWebVitals.js","index.js"],"names":["EasyData","key","problemDescription","mathProblem","answer","EasyExercise","map","induvidual","className","type","onChange","e","console","log","target","value","Exercises","to","path","Easy","About","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAIeA,G,MAJE,CACb,CAACC,IAAI,EAAGC,mBAAmB,eAAgBC,YAAY,sBAAkBC,OAAO,GAChF,CAACH,IAAI,EAAGC,mBAAmB,eAAgBC,YAAY,gBAAiBC,OAAO,K,OCyBpEC,MAzBf,WAEI,OAAQ,kCACNL,EAASM,KAAI,SAACC,GAAc,IAChBN,EAAwCM,EAAxCN,IAAKC,EAAmCK,EAAnCL,mBAAoBC,EAAeI,EAAfJ,YAMlC,OACE,sBAAeK,UAAU,OAAzB,UACE,4BAAIN,IACD,sBAAKM,UAAU,cAAf,UACI,6BAAKL,IACL,uBAAOM,KAAK,OAAOC,SATZ,SAACC,GAChBC,QAAQC,IAAIF,EAAEG,OAAOC,UASb,iDALCd,S,cCkCNe,MAtCf,WACI,OACI,cAAC,IAAD,UACA,0BAASR,UAAU,mBAAnB,UACE,sBAAKA,UAAU,oBAAf,UACE,mDACA,+BACE,6BACE,cAAC,IAAD,CAAMS,GAAG,kBAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,oBAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,kBAAT,0BAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kBAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,oBAAZ,SACE,0CAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,iDClCCE,MAJf,WACI,OAAO,wC,MC8CIC,MAjCf,WACE,OACE,cAAC,IAAD,UACE,0BAASb,UAAU,SAAnB,UACE,qBAAKA,UAAU,aAAf,SAEE,+BACE,6BACE,cAAC,IAAD,CAAMS,GAAG,IAAT,yBAGF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,0BAQN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,eC3BGI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d460073d.chunk.js","sourcesContent":["const EasyData = [\n    {key:1, problemDescription:\"Solve for c.\" ,mathProblem:\"6c+14=âˆ’5c+4+9c\", answer:2},\n    {key:2, problemDescription:\"Solve for s.\" ,mathProblem:\"0.5s+1=7+4.5s\", answer:4}\n]\nexport default EasyData","import EasyData from \"../ExerciseData/ExerciseData\"\n\nfunction EasyExercise(){\n\n    return( <section>{\n      EasyData.map((induvidual)=>{\n           const {key, problemDescription, mathProblem} = induvidual\n         \n          const onChange = (e) =>{\n            console.log(e.target.value)\n          }\n\n         return (\n           <div key={key} className=\"item\">\n             <p>{problemDescription}</p>\n                <div className=\"itemContent\">\n                    <h3>{mathProblem}</h3>\n                    <input type=\"text\" onChange={onChange}/>\n                    <button>Submit</button>\n                </div>\n           </div>\n         )\n    })\n}\n</section>)\n}\n\nexport default EasyExercise\n\n","import  EasyExercise  from \"../ExerciseTemplate/Easy.jsx\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nfunction Exercises() {\n    return(\n        <Router>\n        <section className=\"difficultyRouter\">\n          <nav className=\"difficultySection\">\n            <h1>Choose difficulty</h1>\n            <ul>\n              <li>\n                <Link to=\"/exercises/easy\">Easy</Link>\n              </li>\n              <li>\n                <Link to=\"/exercises/normal\">Normal</Link>\n              </li>\n              <li>\n                <Link to=\"/exercises/hard\">Hard</Link>\n              </li>\n            </ul>\n          </nav>\n  \n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/exercises/easy\">\n              <EasyExercise/>\n            </Route>\n            <Route path=\"/exercises/normal\">\n              <h1>Normal</h1>\n            </Route>\n            <Route path=\"/exercises/hard\">\n              <h1>Hard</h1>\n            </Route>\n          </Switch>\n        </section>\n      </Router>\n    );\n   \n}\n\nexport default Exercises","function About() {\n    return <h2>About</h2>;\n  }\n\nexport default About","import Exercises from \"./Componets/Navigation/ExerciseSection.js\";\nimport About from \"./Componets/Navigation/AboutSection.js\";\n\nimport './css/App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <section className=\"router\">\n        <nav className=\"navSection\">\n\n          <ul>\n            <li>\n              <Link to=\"/\">Exercises</Link>\n            </li>\n\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Exercises />\n          </Route>\n        </Switch>\n      </section>\n    </Router>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}