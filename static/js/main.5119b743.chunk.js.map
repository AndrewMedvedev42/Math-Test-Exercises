{"version":3,"sources":["Componets/ExerciseData/ExerciseData.js","Componets/ExerciseTemplate/Template.jsx","Componets/Navigation/SectionDescription.jsx","Componets/Navigation/ExerciseSection.js","Componets/Navigation/AboutSection.js","App.js","reportWebVitals.js","index.js"],"names":["Data","id","sortKey","problemDescription","mathProblem","answer","Template","keyName","useState","typedAnswer","setTypedAnswer","map","induvidual","console","log","className","type","onChange","e","target","value","autoComplete","onClick","parseInt","node","document","getElementById","textContent","style","color","disabled","backgroundColor","onCheck","SectionDescription","difficulty","toLowerCase","Exercises","to","path","Easy","Medium","Hard","About","App","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5119b743.chunk.js","sourcesContent":["//Here is the data that cotains description, math problem, and answer\n\nconst Data = [\n    {id:1, sortKey:\"easy\", problemDescription:\"Find for X\"   ,mathProblem:\"7x - 6 = 22\", answer:4},\n    {id:2, sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"5 + 2x = 15\", answer:5},\n    {id:3, sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"4x + 3 = 11\", answer:2},\n    {id:4,  sortKey:\"easy\",problemDescription:\"Find for X\" ,mathProblem:\"-5x + 20 = 25\", answer:-1},\n    {id:5,  sortKey:\"easy\",problemDescription:\"Norm ex\" ,mathProblem:\"12x + 0 = 144\", answer:12},\n\n\n    {id:11, sortKey:\"medium\",problemDescription:\"Mario answered 30% of the questions correctly. The test contained a total of 80 questions. How many questions did Mario answer correctly?\" ,mathProblem:\"\", answer:7},\n    {id:22,  sortKey:\"medium\",problemDescription:\"Medium\" ,mathProblem:\"6c+14=c\", answer:7},\n    {id:33,  sortKey:\"medium\",problemDescription:\"Medium\" ,mathProblem:\"65+9c\", answer:7},\n    {id:44,  sortKey:\"medium\",problemDescription:\"Medium\" ,mathProblem:\"6c5c+4+9c\", answer:7},\n    {id:55,  sortKey:\"medium\",problemDescription:\"Medium\" ,mathProblem:\"6c+14=−9c\", answer:7},\n\n\n    {id:21, sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"6c+14=−5c+4+9c\", answer:7},\n    {id:22,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"6c+14=−5c+4+9c\", answer:7},\n    {id:23,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"6c+14=−5c+4+9c\", answer:7},\n    {id:24,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"6c+14=−5c+4+9c\", answer:7},\n    {id:25,  sortKey:\"hard\",problemDescription:\"Hard\" ,mathProblem:\"6c+14=−5c+4+9c\", answer:7}\n]\n\n//Exporting the data\nexport default Data","import { useState } from \"react\"\nimport Data from \"../ExerciseData/ExerciseData.js\"\n\n\n//template of the item with exercise data like for desription, problem, input and button\n\nfunction Template({keyName}){\n  //sets answer that was typed(for now only with numbers)\n  const [typedAnswer, setTypedAnswer] = useState(0)\n\n    return(<section>{\n//maps throgh data from ExerciseData.js\n      Data.map((induvidual)=>{\n        const {problemDescription, mathProblem, answer, sortKey, id} = induvidual\n        //consoles the mathProblem and answer to console to now the true answer(for testing only!)\n        \n        console.log(`${mathProblem} Answer:${answer}`);\n\n//targets value of the induvidual item\n        if(sortKey === keyName){\n\n          const onChange = (e) =>{\n            setTypedAnswer(e.target.value)\n          }\n//sets changes if the answer is right or not. This function disables inputfield and colors the button green \n//if the answer is right or makes button red if it is wrong\n          const onCheck = (id) =>{\n            console.log(\"Checked\")\n//changes the text content and color of <h1>(line 50) if the answer was right or wrong\n            if(parseInt(typedAnswer) === answer){\n\n              let node = document.getElementById(`${id}verificationMessage`)\n              node.textContent = \"Good job!\"\n              node.style.color = \"limegreen\"\n//disables input field and button if the answer was right\n              document.getElementById(`${id}input`).disabled = true\n              document.getElementById(`${id}button`).disabled = true\n              document.getElementById(`${id}button`).style.backgroundColor = \"#cccccc\"\n            }else{\n//changes text content and color  of <h1>(line 50) to red if the answer was wrong\n              let node = document.getElementById(`${id}verificationMessage`)\n              node.textContent = \"Incorrect, try again!\"\n              node.style.color = \"crimson\"\n            }\n          }\n      //the temple ot self  \n          return (\n           <div id={id} key={id} className=\"item\">\n\n             <div id={`${id}Title`} className=\"title\">\n              <h1>{problemDescription}</h1>\n              <h2 id={`${id}verificationMessage`}></h2>\n             </div>\n\n                <div className=\"itemContent\">\n                    <p>{mathProblem}</p>\n                    <div>\n                      <input id={`${id}input`} type=\"text\" onChange={onChange} autoComplete=\"off\"/>\n                      <button id={`${id}button`} onClick={()=>{onCheck(id)}}>Submit</button>\n                    </div>\n\n                </div>\n                \n           </div>\n          )\n        }\n    })\n}\n</section>)\n}\n\nexport default Template\n\n","function SectionDescription({difficulty}){\n    return(<article>\n        <h1>{`${difficulty}`}</h1>\n        <p>{`This is ${difficulty.toLowerCase()} level section`}</p>\n        <p className=\"opac\">{\"In console you can find right answers(for testing only)\"}</p>\n    </article>)\n}\n\nexport default SectionDescription;","import  Template  from \"../ExerciseTemplate/Template.jsx\";\nimport '../../css/App.css';\nimport  SectionDescription  from \"./SectionDescription\";\nimport FadeIn from 'react-fade-in';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nfunction Exercises() {\n    return(\n        <Router>\n        <section className=\"difficultyRouter\">\n          <nav className=\"difficultySection\">\n            <ul>\n              <li>\n                <Link className=\"Link linkHover\" to=\"/exercises/easy\">Easy</Link>\n              </li>\n              <li>\n                <Link className=\"Link linkHover\" to=\"/exercises/normal\">Normal</Link>\n              </li>\n              <li>\n                <Link className=\"Link linkHover\" to=\"/exercises/hard\">Hard</Link>\n              </li>\n            </ul>\n          </nav>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/exercises/easy\">\n              <Easy/>\n            </Route>\n            <Route path=\"/exercises/normal\">\n              <Medium/>\n            </Route>\n            <Route path=\"/exercises/hard\">\n              <Hard/>\n            </Route>\n          </Switch>\n        </section>\n      </Router>\n    );\n  \n    function Easy() {\n      return(\n        <section>\n          <FadeIn>\n            <SectionDescription difficulty=\"Easy\" />\n            <Template keyName=\"easy\"/>\n          </FadeIn>\n        </section>\n      )\n    }\n    function Medium() {\n      return(\n        <section>\n          <FadeIn>\n            <SectionDescription difficulty=\"Medium\" />\n            <Template keyName=\"medium\"/>\n          </FadeIn>\n        </section>\n      )\n    }\n    function Hard() {\n      return(\n        <section>\n          <FadeIn>\n            <SectionDescription difficulty=\"Hard\" />\n            <Template keyName=\"hard\"/>\n          </FadeIn>\n        </section>\n      )\n    }\n}\n\nexport default Exercises","function About() {\n    return <h2>About</h2>;\n  }\n\nexport default About","import Exercises from \"./Componets/Navigation/ExerciseSection.js\";\nimport About from \"./Componets/Navigation/AboutSection.js\";\nimport { FaPenAlt } from 'react-icons/fa';\n\nimport './css/App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <section className=\"router\">\n        <nav className=\"navSection\">\n\n          <ul>\n            <li><FaPenAlt size={40} className=\"logoIcon\"/></li>\n            <li>\n              <Link className=\"Link\" to=\"/\">Exercises</Link>\n            </li>\n\n            <li>\n              <Link className=\"Link\" to=\"/about\">About</Link>\n            </li>\n          </ul>\n\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Exercises />\n          </Route>\n        </Switch>\n      </section>\n    </Router>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}